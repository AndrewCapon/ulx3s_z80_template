F00:0001       	ORG 0000h	; start at 0x0000
F00:0002       
F00:0003       RST00:  di		; disable interrupts
               S01:00000000:  F3
F00:0004       	jp bootstrap
               S01:00000001:  C3 3F 00
F00:0005       	nop
               S01:00000004:  00
F00:0006       	nop
               S01:00000005:  00
F00:0007       	nop
               S01:00000006:  00
F00:0008       	nop		; pad to address 0x0008
               S01:00000007:  00
F00:0009       
F00:0010       RST08:	jp TX
               S01:00000008:  C3 3A 00
F00:0011       	nop
               S01:0000000B:  00
F00:0012       	nop
               S01:0000000C:  00
F00:0013       	nop
               S01:0000000D:  00
F00:0014       	nop
               S01:0000000E:  00
F00:0015       	nop
               S01:0000000F:  00
F00:0016       
F00:0017       RST10:	jp getc
               S01:00000010:  C3 4B 00
F00:0018       	nop
               S01:00000013:  00
F00:0019       	nop
               S01:00000014:  00
F00:0020       	nop
               S01:00000015:  00
F00:0021       	nop
               S01:00000016:  00
F00:0022       	nop
               S01:00000017:  00
F00:0023       
F00:0024       RST18:	jp pollc
               S01:00000018:  C3 5C 00
F00:0025       	nop
               S01:0000001B:  00
F00:0026       	nop
               S01:0000001C:  00
F00:0027       	nop
               S01:0000001D:  00
F00:0028       	nop
               S01:0000001E:  00
F00:0029       	nop
               S01:0000001F:  00
F00:0030       	nop
               S01:00000020:  00
F00:0031       	nop
               S01:00000021:  00
F00:0032       	nop
               S01:00000022:  00
F00:0033       	nop
               S01:00000023:  00
F00:0034       	nop
               S01:00000024:  00
F00:0035       	nop
               S01:00000025:  00
F00:0036       	nop
               S01:00000026:  00
F00:0037       	nop
               S01:00000027:  00
F00:0038       	nop
               S01:00000028:  00
F00:0039       	nop
               S01:00000029:  00
F00:0040       	nop
               S01:0000002A:  00
F00:0041       	nop
               S01:0000002B:  00
F00:0042       	nop
               S01:0000002C:  00
F00:0043       	nop
               S01:0000002D:  00
F00:0044       	nop
               S01:0000002E:  00
F00:0045       	nop
               S01:0000002F:  00
F00:0046       	nop
               S01:00000030:  00
F00:0047       	nop
               S01:00000031:  00
F00:0048       	nop
               S01:00000032:  00
F00:0049       	nop
               S01:00000033:  00
F00:0050       	nop
               S01:00000034:  00
F00:0051       	nop
               S01:00000035:  00
F00:0052       	nop
               S01:00000036:  00
F00:0053       	nop
               S01:00000037:  00
F00:0054       
F00:0055       RST38:	reti
               S01:00000038:  ED 4D
F00:0056       
F00:0057       TX:	push af
               S01:0000003A:  F5
F00:0058       ;txbusy:	in a,($80)	; read serial status
F00:0059       ;	bit 1,a		; check status bit 1
F00:0060       ;	jr z, txbusy	; loop if zero (serial is busy)
F00:0061       	pop af
               S01:0000003B:  F1
F00:0062       	out ($81), a	; transmit the character
               S01:0000003C:  D3 81
F00:0063       	ret
               S01:0000003E:  C9
F00:0064       
F00:0065       bootstrap:  
F00:0066       	ld hl,$FFF9	; stack initialization
               S01:0000003F:  21 F9 FF
F00:0067       	ld sp,hl
               S01:00000042:  F9
F00:0068       
F00:0069       	ld a, $96	; Initialize ACIA
               S01:00000043:  3E 96
F00:0070       	out ($80),a
               S01:00000045:  D3 80
F00:0071       
F00:0072       	di
               S01:00000047:  F3
F00:0073       
F00:0074       	jp start		
               S01:00000048:  C3 74 00
F00:0075       
F00:0076       
F00:0077       ;@ Follows additional functions to interact with rc2014 hardware
F00:0078       ;@
F00:0079       ;@---------------------------------------------------------------------
F00:0080       ;@ getc
F00:0081       ;@
F00:0082       ;@  wait for system UART and return the received character in HL
F00:0083       ;@
F00:0084       ;@---------------------------------------------------------------------
F00:0085       getc:
F00:0086       	push af
               S01:0000004B:  F5
F00:0087       waitch:     in a, ($80)
               S01:0000004C:  DB 80
F00:0088       	bit 0, a
               S01:0000004E:  CB 47
F00:0089       	jr z, waitch
               S01:00000050:  28 FA
F00:0090       	in a, ($81)
               S01:00000052:  DB 81
F00:0091       	ld h, 0
               S01:00000054:  26 00
F00:0092       	ld l, a
               S01:00000056:  6F
F00:0093       	pop af
               S01:00000057:  F1
F00:0094       	ret
               S01:00000058:  C9
F00:0095       
F00:0096       
F00:0097       ;@---------------------------------------------------------------------
F00:0098       ;@ putc
F00:0099       ;@
F00:0100       ;@ output the byte in register L to system UART
F00:0101       ;@
F00:0102       ;@---------------------------------------------------------------------
F00:0103       putc:
F00:0104       	ld a, l
               S01:00000059:  7D
F00:0105       	rst $08
               S01:0000005A:  CF
F00:0106       	ret
               S01:0000005B:  C9
F00:0107       
F00:0108       
F00:0109       ;@---------------------------------------------------------------------
F00:0110       ;@ pollc
F00:0111       ;@
F00:0112       ;@ polls the uart receive buffer status and
F00:0113       ;@ returns the result in the register L:
F00:0114       ;@   L=0 : no data available
F00:0115       ;@   L=1 : data available
F00:0116       ;@
F00:0117       ;@---------------------------------------------------------------------
F00:0118       pollc:
F00:0119       	ld l, 0
               S01:0000005C:  2E 00
F00:0120       	in a, ($80)
               S01:0000005E:  DB 80
F00:0121       	bit 0, a
               S01:00000060:  CB 47
F00:0122       	ret z
               S01:00000062:  C8
F00:0123       	ld l, 1
               S01:00000063:  2E 01
F00:0124       	ret
               S01:00000065:  C9
F00:0125       
F00:0126       
F00:0127       ;@---------------------------------------------------------------------
F00:0128       ;@ inp
F00:0129       ;@
F00:0130       ;@ reads a byte from port l and returns the results in l
F00:0131       ;@
F00:0132       ;@---------------------------------------------------------------------
F00:0133       inp:
F00:0134       	push bc
               S01:00000066:  C5
F00:0135       	ld c, l
               S01:00000067:  4D
F00:0136       	in b, (c)
               S01:00000068:  ED 40
F00:0137       	ld l, b
               S01:0000006A:  68
F00:0138       	pop bc
               S01:0000006B:  C1
F00:0139       	ret
               S01:0000006C:  C9
F00:0140       
F00:0141       
F00:0142       ;@---------------------------------------------------------------------
F00:0143       ;@ inp
F00:0144       ;@
F00:0145       ;@ writes register l to port h
F00:0146       ;@
F00:0147       ;@---------------------------------------------------------------------
F00:0148       outp:
F00:0149       	push bc
               S01:0000006D:  C5
F00:0150       	ld c, h
               S01:0000006E:  4C
F00:0151       	ld b, l
               S01:0000006F:  45
F00:0152       	out (c), b
               S01:00000070:  ED 41
F00:0153       	pop bc
               S01:00000072:  C1
F00:0154       	ret
               S01:00000073:  C9
F00:0155       
F00:0156       start:
F00:0157       	;ld l,'H'
F00:0158       	;call putc
F00:0159       	ld hl, msg
               S01:00000074:  21 92 00
F00:0160       	call print_string
               S01:00000077:  CD 83 00
F00:0161       	ld bc, $0FFF
               S01:0000007A:  01 FF 0F
F00:0162       	call delay
               S01:0000007D:  CD 8C 00
F00:0163       	;ld a, 'H'
F00:0164       	;rst $08
F00:0165       	jp start
               S01:00000080:  C3 74 00
F00:0166       
F00:0167       print_string:
F00:0168               ld a, (hl)
               S01:00000083:  7E
F00:0169               cp 255
               S01:00000084:  FE FF
F00:0170               ret z
               S01:00000086:  C8
F00:0171               inc hl
               S01:00000087:  23
F00:0172               rst $08
               S01:00000088:  CF
F00:0173               jp print_string
               S01:00000089:  C3 83 00
F00:0174       
F00:0175       delay:
F00:0176       	dec bc
               S01:0000008C:  0B
F00:0177       	ld a, b
               S01:0000008D:  78
F00:0178       	or c
               S01:0000008E:  B1
F00:0179       	ret z
               S01:0000008F:  C8
F00:0180       	jr delay
               S01:00000090:  18 FA
F00:0181       
F00:0182       msg:
F00:0183               db 'Z80 monitor', 13, 10, 255
               S01:00000092:  5A 38 30 20 6D 6F 6E 69 74 6F 72
               S01:0000009D:  0D
               S01:0000009E:  0A
               S01:0000009F:  FF
F00:0184       
F00:0185       


Sections:
S01  seg0


Sources:
F00  boot.asm


Symbols:
delay EXPR(140=0x8c) ABS 
print_string EXPR(131=0x83) ABS 
msg EXPR(146=0x92) ABS 
outp EXPR(109=0x6d) UNUSED ABS 
inp EXPR(102=0x66) UNUSED ABS 
putc EXPR(89=0x59) UNUSED ABS 
waitch EXPR(76=0x4c) ABS 
start EXPR(116=0x74) ABS 
RST38 EXPR(56=0x38) UNUSED ABS 
pollc EXPR(92=0x5c) ABS 
RST18 EXPR(24=0x18) UNUSED ABS 
getc EXPR(75=0x4b) ABS 
RST10 EXPR(16=0x10) UNUSED ABS 
TX EXPR(58=0x3a) ABS 
RST08 EXPR(8=0x8) UNUSED ABS 
bootstrap EXPR(63=0x3f) ABS 
RST00 EXPR(0=0x0) UNUSED ABS 
__RPTCNT EXPR(-1=0xffff) INTERNAL 
__VASM EXPR(0=0x0) INTERNAL 

There have been no errors.
